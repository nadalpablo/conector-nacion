package us.inswitch.mts.webservices.bn;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 3.1.8
 * 2016-11-03T14:45:07.661-03:00
 * Generated source version: 3.1.8
 * 
 */
@WebServiceClient(name = "MTSServiceRED", 
                  wsdlLocation = "file:/home/pablo/workspaces/biller_plus_workspace/billersplus-connector-emulador/src/main/resources/NSSA-CashOut.wsdl",
                  targetNamespace = "http://bn.webservices.mts.inswitch.us") 
public class MTSServiceRED extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://bn.webservices.mts.inswitch.us", "MTSServiceRED");
    public final static QName MTSServiceREDHttpsEndpoint = new QName("http://bn.webservices.mts.inswitch.us", "MTSServiceREDHttpsEndpoint");
    public final static QName MTSServiceREDHttpsSoap12Endpoint = new QName("http://bn.webservices.mts.inswitch.us", "MTSServiceREDHttpsSoap12Endpoint");
    public final static QName MTSServiceREDHttpSoap11Endpoint = new QName("http://bn.webservices.mts.inswitch.us", "MTSServiceREDHttpSoap11Endpoint");
    public final static QName MTSServiceREDHttpEndpoint = new QName("http://bn.webservices.mts.inswitch.us", "MTSServiceREDHttpEndpoint");
    public final static QName MTSServiceREDHttpsSoap11Endpoint = new QName("http://bn.webservices.mts.inswitch.us", "MTSServiceREDHttpsSoap11Endpoint");
    public final static QName MTSServiceREDHttpSoap12Endpoint = new QName("http://bn.webservices.mts.inswitch.us", "MTSServiceREDHttpSoap12Endpoint");
    static {
        URL url = null;
        try {
            url = new URL("file:/home/pablo/workspaces/biller_plus_workspace/billersplus-connector-emulador/src/main/resources/NSSA-CashOut.wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(MTSServiceRED.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "file:/home/pablo/workspaces/biller_plus_workspace/billersplus-connector-emulador/src/main/resources/NSSA-CashOut.wsdl");
        }
        WSDL_LOCATION = url;
    }

    public MTSServiceRED(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public MTSServiceRED(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public MTSServiceRED() {
        super(WSDL_LOCATION, SERVICE);
    }
    
    public MTSServiceRED(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public MTSServiceRED(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public MTSServiceRED(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }    




    /**
     *
     * @return
     *     returns MTSServiceREDPortType
     */
    @WebEndpoint(name = "MTSServiceREDHttpsEndpoint")
    public MTSServiceREDPortType getMTSServiceREDHttpsEndpoint() {
        return super.getPort(MTSServiceREDHttpsEndpoint, MTSServiceREDPortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns MTSServiceREDPortType
     */
    @WebEndpoint(name = "MTSServiceREDHttpsEndpoint")
    public MTSServiceREDPortType getMTSServiceREDHttpsEndpoint(WebServiceFeature... features) {
        return super.getPort(MTSServiceREDHttpsEndpoint, MTSServiceREDPortType.class, features);
    }


    /**
     *
     * @return
     *     returns MTSServiceREDPortType
     */
    @WebEndpoint(name = "MTSServiceREDHttpsSoap12Endpoint")
    public MTSServiceREDPortType getMTSServiceREDHttpsSoap12Endpoint() {
        return super.getPort(MTSServiceREDHttpsSoap12Endpoint, MTSServiceREDPortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns MTSServiceREDPortType
     */
    @WebEndpoint(name = "MTSServiceREDHttpsSoap12Endpoint")
    public MTSServiceREDPortType getMTSServiceREDHttpsSoap12Endpoint(WebServiceFeature... features) {
        return super.getPort(MTSServiceREDHttpsSoap12Endpoint, MTSServiceREDPortType.class, features);
    }


    /**
     *
     * @return
     *     returns MTSServiceREDPortType
     */
    @WebEndpoint(name = "MTSServiceREDHttpSoap11Endpoint")
    public MTSServiceREDPortType getMTSServiceREDHttpSoap11Endpoint() {
        return super.getPort(MTSServiceREDHttpSoap11Endpoint, MTSServiceREDPortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns MTSServiceREDPortType
     */
    @WebEndpoint(name = "MTSServiceREDHttpSoap11Endpoint")
    public MTSServiceREDPortType getMTSServiceREDHttpSoap11Endpoint(WebServiceFeature... features) {
        return super.getPort(MTSServiceREDHttpSoap11Endpoint, MTSServiceREDPortType.class, features);
    }


    /**
     *
     * @return
     *     returns MTSServiceREDPortType
     */
    @WebEndpoint(name = "MTSServiceREDHttpEndpoint")
    public MTSServiceREDPortType getMTSServiceREDHttpEndpoint() {
        return super.getPort(MTSServiceREDHttpEndpoint, MTSServiceREDPortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns MTSServiceREDPortType
     */
    @WebEndpoint(name = "MTSServiceREDHttpEndpoint")
    public MTSServiceREDPortType getMTSServiceREDHttpEndpoint(WebServiceFeature... features) {
        return super.getPort(MTSServiceREDHttpEndpoint, MTSServiceREDPortType.class, features);
    }


    /**
     *
     * @return
     *     returns MTSServiceREDPortType
     */
    @WebEndpoint(name = "MTSServiceREDHttpsSoap11Endpoint")
    public MTSServiceREDPortType getMTSServiceREDHttpsSoap11Endpoint() {
        return super.getPort(MTSServiceREDHttpsSoap11Endpoint, MTSServiceREDPortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns MTSServiceREDPortType
     */
    @WebEndpoint(name = "MTSServiceREDHttpsSoap11Endpoint")
    public MTSServiceREDPortType getMTSServiceREDHttpsSoap11Endpoint(WebServiceFeature... features) {
        return super.getPort(MTSServiceREDHttpsSoap11Endpoint, MTSServiceREDPortType.class, features);
    }


    /**
     *
     * @return
     *     returns MTSServiceREDPortType
     */
    @WebEndpoint(name = "MTSServiceREDHttpSoap12Endpoint")
    public MTSServiceREDPortType getMTSServiceREDHttpSoap12Endpoint() {
        return super.getPort(MTSServiceREDHttpSoap12Endpoint, MTSServiceREDPortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns MTSServiceREDPortType
     */
    @WebEndpoint(name = "MTSServiceREDHttpSoap12Endpoint")
    public MTSServiceREDPortType getMTSServiceREDHttpSoap12Endpoint(WebServiceFeature... features) {
        return super.getPort(MTSServiceREDHttpSoap12Endpoint, MTSServiceREDPortType.class, features);
    }

}
